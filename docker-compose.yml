services:
  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
    image: d2s-app:dev
    command: yarn run dev --host 0.0.0.0 --port 8080
    volumes:
      - ./frontend/:/app
      - /app/node_modules
    restart: always
    depends_on:
      - backend
    environment:
      - VITE_API_V1_STR=/api/v1
      - VITE_BRAND_FULL=Data to Science
      - VITE_BRAND_SHORT=D2S
      - VITE_BRAND_SLOGAN=A Data-driven Open Science Community for Sustained Innovation
      - VITE_DOMAIN=http://localhost:8000

  backend:
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: true
    image: d2s-api:dev
    volumes:
      - ./backend:/app
      - log-data:/app/logs
      - user-data:/static
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - backend.env
      - db.env

  db:
    image: postgis/postgis:15-3.3
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready --username=$$POSTGRES_USER --dbname=$$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=d2s
      - POSTGRES_DB=d2s
    env_file:
      - db.env

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PGADMIN_DEFAULT_EMAIL=youremail@example.com
      - PGADMIN_DEFAULT_PASSWORD=password

  redis:
    image: redis:alpine
    restart: always

  celery_worker:
    image: d2s-api:dev
    command: /app/worker-start.sh
    volumes:
      - user-data:/static
    restart: always
    depends_on:
      - backend
    env_file:
      - backend.env
      - db.env

  flower:
    image: d2s-api:dev
    command: /app/flower-start.sh
    volumes:
      - user-data:/user-data
    ports:
      - 5555:5555
    restart: always
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    env_file:
      - backend.env
      - db.env

  proxy:
    image: nginxinc/nginx-unprivileged:latest
    volumes:
      - ./nginx/d2s-proxy.dev.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "0.0.0.0:8000:80"
    restart: always
    depends_on:
      - frontend

volumes:
  db-data:
  log-data:
  user-data:
