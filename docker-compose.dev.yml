services:
  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.dev.dockerfile
    command: yarn start
    volumes:
      - ./frontend/:/app
    restart: always
    depends_on:
      - backend
    env_file: .env

  backend:
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: true
    command: uvicorn app.main:app --host 0.0.0.0 --port 5000 --reload
    volumes:
      - ./backend:/app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file: .env

  db:
    image: postgis/postgis:15-3.3
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: always
    env_file:
      - .env
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready --username=${POSTGRES_USER} --dbname=${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  proxy:
    build:
      context: ./nginx
      dockerfile: nginx.dockerfile
    ports:
      - "80:80"
    restart: always
    depends_on:
      - frontend

volumes:
  db-data:
